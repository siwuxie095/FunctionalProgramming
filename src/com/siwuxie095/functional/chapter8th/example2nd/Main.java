package com.siwuxie095.functional.chapter8th.example2nd;

/**
 * @author Jiajing Li
 * @date 2020-10-25 16:18:50
 */
public class Main {

    /**
     * Lambda 表达式改变了设计模式
     *
     * 设计模式是人们熟悉的另一种设计思想，它是软件架构中解决通用问题的模板。如果碰到一个问题，并且恰好熟悉一个
     * 与之适应的模式，就能直接应用该模式来解决问题。从某种程度上来说，设计模式将解决特定问题的最佳实践途径固定
     * 了下来。
     *
     * 当然，没有永远的最佳实践。以曾经风靡一时的单例模式为例，该模式确保只产生一个对象实例。在过去十年中，人们
     * 批评它让程序变得更脆弱，且难于测试。敏捷开发的流行，让测试显得更加重要，单例模式的这个问题把它变成了一个
     * 反模式：一种应该避免使用的模式。
     *
     * 这里的重点并不是讨论设计模式如何变得过时，相反，讨论的是如何使用 Lambda 表达式，让现有设计模式变得更好、
     * 更简单，或者在某些情况下，有了不同的实现方式。Java 8 引入的新语言特性是所有这些设计模式变化的推动因素。
     */
    public static void main(String[] args) {

    }

}
