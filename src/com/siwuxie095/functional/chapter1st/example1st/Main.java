package com.siwuxie095.functional.chapter1st.example1st;

/**
 * @author Jiajing Li
 * @date 2020-10-08 18:31:34
 */
public class Main {

    /**
     * 前言
     *
     * 对很多人来说，Java 8 提供对函数式编程元素有限：
     * （1）没有单子；
     * （2）没有语言层面的惰性求值；
     * （3）没有为不可变性提供额外支持；
     *
     * 但对实用至上的程序员来说，这没什么大不了的，Java 8 只是想在类库级别抽象，从而让程序员写出简单干净的代码
     * 来解决业务问题。
     *
     * PS：对于函子、单子等函数式编程概念，在 Java 8 中没有涉及，可自行 Google 进行了解。
     *
     * 之后的内容将探讨如下主题：
     * （1）如何编写出简单、干净、易读的代码 -- 尤其是对于集合的操作？
     * （2）如何简单地使用并行计算提高性能？
     * （3）如何准确地为问题建模，并且开发处更好的领域特定语言？
     * （4）如何写出不易出错，并且更简单的并发代码？
     * （5）如何测试和调试 Lambda 表达式？
     *
     * 将 Lambda 表达式加入 Java，并不只是为了提高开发人员的生产效率，业界也对这一特性有根本性的需求。
     */
    public static void main(String[] args) {

    }

}
